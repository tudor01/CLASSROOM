// <auto-generated />
using System;
using ClassroomPlatform.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassroomPlatform.DataAccess.Migrations
{
    [DbContext(typeof(ClassroomPlatformDbContext))]
    partial class ClassroomPlatformDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Announcement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Assigment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Assigments");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("GroupClassroomId");

                    b.HasIndex("GroupId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.EndUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EndUsers");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.EndUserClassroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EndUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("EndUserId");

                    b.ToTable("EndUserClassrooms");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.EndUserGrade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssigmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EndUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GradeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssigmentId");

                    b.HasIndex("EndUserId");

                    b.HasIndex("GradeId");

                    b.ToTable("EndUserGrades");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("TotalScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.GroupClassroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GroupClassrooms");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EndUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("EndUserId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Announcement", b =>
                {
                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.Classroom", null)
                        .WithMany("Announcements")
                        .HasForeignKey("ClassroomId");

                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.EndUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Assigment", b =>
                {
                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.Classroom", null)
                        .WithMany("Assigments")
                        .HasForeignKey("ClassroomId");

                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.EndUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Classroom", b =>
                {
                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.EndUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.GroupClassroom", null)
                        .WithMany("Classrooms")
                        .HasForeignKey("GroupClassroomId");

                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.Group", null)
                        .WithMany("Classrooms")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.EndUserClassroom", b =>
                {
                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId");

                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.EndUser", "EndUser")
                        .WithMany()
                        .HasForeignKey("EndUserId");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.EndUserGrade", b =>
                {
                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.Assigment", null)
                        .WithMany("EndUserGrades")
                        .HasForeignKey("AssigmentId");

                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.EndUser", "EndUser")
                        .WithMany()
                        .HasForeignKey("EndUserId");

                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");
                });

            modelBuilder.Entity("ClassroomPlatform.ApplicationLogic.Models.Invitation", b =>
                {
                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId");

                    b.HasOne("ClassroomPlatform.ApplicationLogic.Models.EndUser", "EndUser")
                        .WithMany()
                        .HasForeignKey("EndUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
